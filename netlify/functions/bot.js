const axios = require("axios");

exports.handler = async (event) => {
    try {
        const body = JSON.parse(event.body);
        console.log("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram:", body);

        const chatId = body.message?.chat?.id;
        const messageText = body.message?.text;
        const botToken = process.env.BOT_TOKEN;

        if (!botToken) {
            throw new Error("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Netlify.");
        }

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª /start, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É Mini App
        if (messageText === "/start") {
            await axios.post(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                chat_id: chatId,
                text: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Mini App üëá",
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "üöÄ –û—Ç–∫—Ä—ã—Ç—å Mini App",
                                web_app: { url: "https://shimmering-travesseiro-b15efa.netlify.app/" }
                            }
                        ]
                    ]
                }
            });

            return { statusCode: 200, body: JSON.stringify({ success: true, message: "Mini App –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞" }) };
        }

        // –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await axios.post(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            chat_id: chatId,
            text: `–í—ã —Å–∫–∞–∑–∞–ª–∏: ${messageText}`
        });

        return { statusCode: 200, body: JSON.stringify({ success: true, message: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ!" }) };
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:", error);
        return { statusCode: 500, body: JSON.stringify({ success: false, error: error.message }) };
    }
};
